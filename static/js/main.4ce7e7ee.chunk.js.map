{"version":3,"sources":["services/validCategories.js","services/sessions.js","actions/shopcart.js","actions/constants.js","actions/games.js","actions/loading.js","actions/categories.js","components/Overview.js","components/Details.js","components/FilterComponent/PlayersSort.js","components/FilterComponent/CategoriesSort.js","components/Sortlist.js","components/CartItems.js","components/CartSum.js","components/Shopcart.js","components/Navbar.js","actions/search.js","components/LandingPage.js","reducers/games.js","reducers/categories.js","reducers/loading.js","reducers/shopcart.js","reducers/search.js","reducers/index.js","store.js","App.js","index.js"],"names":["validCats","API_URL","getGameById","id","a","async","fetch","method","response","json","parsedResponse","game","games","getCategories","headers","categories","filteredCats","filter","cat","includes","searchGamesByFilter","search","minPlayers","maxPlayers","page","query","updateCart","dispatch","type","payload","msg","addToCart","savedItems","JSON","parse","localStorage","getItem","push","setItem","stringify","removeFromCart","index","findIndex","obj","splice","toggleShopcart","getGameDetails","getGamesByFilter","setLoader","stopLoader","getAllCategories","setPage","currencyFormatter","require","Overview","props","handleChangePage","value","event","preventDefault","newState","searchText","topOfPage","chosenCats","join","undefined","state","showScrollButton","discountPrice","this","players","window","addEventListener","handleScroll","bind","setState","removeEventListener","history","scrollTo","top","behavior","block","scroll","scrollY","error","loading","Skeletons","Array","from","map","element","Grid","item","xs","sm","md","lg","className","key","Card","Skeleton","variant","width","container","spacing","gameNames","CardActionArea","onClick","handleDetailsClick","CardMedia","image","images","small","title","name","src","alt","Typography","gutterBottom","component","discount","format","price","toFixed","precision","thousand","code","Badge","badgeContent","color","Button","handleCartClick","Fab","handleScrollTopClick","size","aria-label","ArrowBackIos","length","ArrowForwardIos","React","Component","mapDispatchToProps","connect","isLoading","Details","relatedGames","match","params","chosenGame","chosenGameCategories","catStr","prevProp","prevState","min_players","max_players","min_playtime","max_playtime","min_age","description_preview","medium","primary_publisher","average_user_rating","rules_url","allCategories","message","height","margin","categoryNames","category","find","categoryObj","otherGames","slice","to","href","target","muiTheme","createMuiTheme","overrides","MuiSlider","thumb","track","useStyles","makeStyles","root","padding","marginTop","marginLeft","setPlayerRange","rangeArray","withRouter","classes","useState","setValue","ThemeProvider","theme","Slider","min","max","step","onChange","newValue","onMouseUp","location","pathname","valueLabelDisplay","aria-labelledby","Category","componentDidMount","toggleCategoryCheck","Cats","checkedCats","forEach","catId","handleClick","checkedId","indexOf","ListItem","role","dense","button","ListItemIcon","Checkbox","checked","ListItemText","primary","List","Sortlist","align","Divider","shopcart","cartItems","style","textAlign","itemMarkup","HighlightOff","reduce","acc","Shopcart","handleCrossClick","Navbar","toggleFilter","open","left","handleShopcartClick","handleSeachIconClick","toggleSearchField","handleSearchFieldChange","searchWord","updateSearchWord","document","handleEnterPress","keyCode","removeItem","showCart","showSearchField","AppBar","Toolbar","Drawer","anchor","onClose","onKeyDown","autoFocus","placeholder","Search","text","LandingPage","gameImage","startSlide","endSlide","sliderSkeleton","el","popGames","handleOverviewClick","handleBackwardClick","handleForwardClick","initialState","getIndex","array","intitailState","combineReducers","action","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","Container","path","exact","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.4ce7e7ee.chunk.js","sourcesContent":["export const validCats = [\"KUBCKBkGxV\", \"a8NM5cugJX\", \"MWoxgHrOJD\", \"PinhJrhnxU\", \"eX8uuNlQkQ\", \"ODWOjWAJj3\", \"bCBXJy9qDw\", \"mavSOM8vjH\", \"N0TkEGfEsF\", \"v4SfYtS2Lr\", \"yq6hVlbM2R\", \"7rV11PKqME\", \"ZTneo8TaIO\", \"upXZ8vNfNO\", \"TYnxiuiI3X\", \"rrvd68LjOR\", \"QAYkTHK1Dd\", \"X8J7RM6dxX\", \"3B3QpKvXD3\", \"O0ogzwLUe8\", \"jX8asGGR6o\"];","import { validCats } from './validCategories';\nconst API_URL = 'https://www.boardgameatlas.com/api';\nconst client_id = 'SB1VGnDv7M'\nconst limit = 32\nconst minPrice = 0.01\n\n\nexport async function searchGames( orderBy, page ) {\n    const response = await fetch(`${API_URL}/search/?limit=${limit}&skip=${page*limit}&ascending=false&order_by=${orderBy}&gt_price=${minPrice}&client_id=${client_id}`, {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n        }\n    })\n    const { games } = await response.json()\n    return games;\n}\n\nexport async function getGameById(id) {\n    const response = await fetch(`${API_URL}/search?ids=${id}&client_id=${client_id}`, {\n        method: 'GET'\n    });\n    const parsedResponse = await response.json();\n    const game = parsedResponse.games[0];\n    return game;\n}\n\nexport async function getCategories() {\n    const response = await fetch(`${API_URL}/game/categories?client_id=${client_id}`, {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n        }\n    })\n    const categories = await response.json()\n    const filteredCats = categories.categories.filter(cat => validCats.includes(cat.id));\n    return filteredCats;\n}\n\nexport async function searchGamesByName(text) {\n    const response = await fetch(`${API_URL}/search?name=${text}&fuzzy_match=true&client_id=${client_id}&gt_price=${minPrice}`, {\n        method: 'GET'\n    });\n    const games = await response.json()\n    return games;\n}\n\nexport async function searchGamesByFilter(categories, search, minPlayers, maxPlayers, page) {\n    const query = `${API_URL}/search?name=${search}&fuzzy_match=true&limit=${limit}&categories=${categories}&skip=${page*limit}&ascending=false&gt_min_players=${minPlayers-1}&lt_max_players=${maxPlayers+1}&order_by=popularity&client_id=${client_id}&gt_price=${minPrice}`;\n\n    const response = await fetch(query , {\n        method: 'GET'\n    });\n    const { games } = await response.json()\n    return games;\n}","import {\n  ADD_TO_CART,\n  ADD_TO_CART_ERROR,\n  REMOVE_FROM_CART,\n  TOGGLE_SHOW_CART,\n} from './constants';\nimport { getGameById } from '../services/sessions';\n\nexport const updateCart = id => async dispatch => {\n  try {\n    const game = await getGameById(id);\n\n    if(!game) {\n      return dispatch({\n        type: ADD_TO_CART_ERROR,\n        payload: { msg: 'Could not find any matching games' }\n      })\n    }\n    \n    dispatch({\n      type: ADD_TO_CART,\n      payload: game\n    })\n  } catch (error) {\n    dispatch({\n      type: ADD_TO_CART_ERROR,\n      payload: error\n    })\n  }\n}\n\nexport const addToCart = id => async dispatch => {\n  const savedItems = JSON.parse(localStorage.getItem('cart-items')) || [];\n  try {\n    const game = await getGameById(id);\n\n    if(!game) {\n      return dispatch({\n        type: ADD_TO_CART_ERROR,\n        payload: { msg: 'Could not find any matching games' }\n      })\n    }\n    \n    dispatch({\n      type: ADD_TO_CART,\n      payload: game\n    })\n    savedItems.push(game);\n    localStorage.setItem('cart-items', JSON.stringify(savedItems));\n    return game;\n  } catch (error) {\n    dispatch({\n      type: ADD_TO_CART_ERROR,\n      payload: error\n    })\n  }\n}\n\nexport const removeFromCart = id => dispatch => {\n const savedItems = JSON.parse(localStorage.getItem('cart-items')) || [];\n const index = savedItems.findIndex(obj => obj.id === id);\n\n  dispatch({\n    type: REMOVE_FROM_CART,\n    payload: id\n  })\n\nif (index !== -1) {\n  savedItems.splice(index, 1);\n}\nlocalStorage.setItem('cart-items', JSON.stringify(savedItems));\n}\n\nexport const toggleShopcart = () => dispatch => {\n  dispatch({\n    type: TOGGLE_SHOW_CART\n  })\n}","export const GET_ALL_GAMES = 'GET_ALL_GAMES';\nexport const GET_ALL_GAMES_ERROR = 'GET_ALL_GAMES_ERROR';\nexport const GET_GAME_DETAILS = 'GET_GAME_DETAILS';\nexport const GAME_DETAILS_ERROR = 'GAME_DETAILS_ERROR';\nexport const GET_CATEGORIES = 'GET_CATEGORIES';\nexport const GET_CATEGORIES_ERROR = 'GET_CATEGORIES_ERROR';\nexport const START_LOADING = 'START_LOADING';\nexport const UNLOAD = 'UNLOAD';\nexport const ADD_TO_CART = 'ADD_TO_CART';\nexport const ADD_TO_CART_ERROR = 'ADD_TO_CART_ERROR';\nexport const REMOVE_FROM_CART = 'REMOVE_FROM_CART';\nexport const TOGGLE_SHOW_CART = 'TOGGLE_SHOW_CART';\nexport const TOGGLE_SEARCH_FIELD = 'TOGGLE_SEARCH_FIELD';\nexport const UPDATE_SEARCH_WORD = 'UPDATE_SEARCH_WORD';\nexport const GET_GAMES_BY_NAME = 'GET_GAMES_BY_NAME';\nexport const GET_GAMES_BY_NAME_ERROR = 'GET_GAMES_BY_NAME_ERROR';\nexport const GET_GAMES_BY_CATEGORIES = 'GET_GAMES_BY_CATEGORIES';\nexport const GET_GAMES_BY_CATEGORIES_ERROR = 'GET_GAMES_BY_CATEGORIES_ERROR';\nexport const CHECK_CATEGORY = 'CHECK_CATEGORY';\nexport const SET_PLAYER_RANGE = 'SET_PLAYER_RANGE';\nexport const SET_PAGE = 'SET_PAGE';\n\n","import {\n    GET_GAME_DETAILS,\n    GAME_DETAILS_ERROR,\n    GET_GAMES_BY_CATEGORIES,\n    GET_GAMES_BY_CATEGORIES_ERROR\n} from './constants';\nimport { searchGamesByFilter, getGameById } from '../services/sessions'\n\nexport const getGameDetails = (id) => async dispatch => {\n    try {\n        const game = await getGameById(id)\n        dispatch({\n            type: GET_GAME_DETAILS,\n            payload: game\n        });\n        return game;\n    } catch(error) {\n        dispatch({\n            type: GAME_DETAILS_ERROR,\n            payload: error\n        });\n    }\n}\n\nexport const getGamesByFilter = (categories='', search='', minPlayers=1, maxPlayers=6, page=0) => async dispatch => {\n    try {\n        const games = await searchGamesByFilter(categories, search, minPlayers, maxPlayers, page);\n        dispatch({\n            type: GET_GAMES_BY_CATEGORIES,\n            payload: games\n        })\n        return games\n    } catch(error) {\n        dispatch({\n            type: GET_GAMES_BY_CATEGORIES_ERROR,\n            payload: error\n        })\n    }\n}","import {\n  START_LOADING,\n  UNLOAD\n} from './constants';\n\nexport const setLoader = () => dispatch => {\n  dispatch({\n    type: START_LOADING,\n  });\n}\n\nexport const stopLoader = () => dispatch => {\n  dispatch({\n    type: UNLOAD\n  })\n}","import {\n    GET_CATEGORIES,\n    GET_CATEGORIES_ERROR,\n    CHECK_CATEGORY,\n    SET_PLAYER_RANGE,\n    SET_PAGE\n} from './constants';\nimport { getCategories } from '../services/sessions';\n\nexport const getAllCategories = () => async dispatch => {\n    try {\n        const categories = await getCategories();\n        dispatch({\n            type: GET_CATEGORIES,\n            payload: categories\n        })\n        return categories\n    } catch(error) {\n        dispatch({\n            type: GET_CATEGORIES_ERROR,\n            payload: error\n        })\n    }\n}\n\nexport const toggleCategoryCheck = id => dispatch => {\n    dispatch({\n        type: CHECK_CATEGORY,\n        payload: id\n    })\n    return id;\n}\n\nexport const setPlayerRange = (rangeArray) => dispatch => {\n    dispatch({\n        type: SET_PLAYER_RANGE,\n        payload: rangeArray\n    });\n}\n\nexport const setPage = page => dispatch => {\n    dispatch({\n        type: SET_PAGE,\n        payload: page\n    })\n}","import React, { Fragment } from 'react';\nimport Card from '@material-ui/core/Card';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Fab from '@material-ui/core/Fab';\nimport Badge from '@material-ui/core/Badge';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport { addToCart } from '../actions/shopcart';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport { getGamesByFilter } from '../actions/games';\nimport { setLoader, stopLoader } from '../actions/loading';\nimport { setPage } from '../actions/categories';\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { ArrowBackIos, ArrowForwardIos } from '@material-ui/icons';\nvar currencyFormatter = require('currency-formatter');\n\n\nclass Overview extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showScrollButton: 'hideScrollButton',\n            page: 0,\n            discountPrice: 'noOverline'\n        }\n    }\n\n    async componentDidMount () {\n        const { \n            setLoader, \n            stopLoader, \n            getGamesByFilter ,\n            searchText,\n            categories: { players, page }\n        } = this.props;\n        await setLoader()\n        const chosenCats = JSON.parse(localStorage.getItem('checked-cats')) || [];\n        await getGamesByFilter(chosenCats.join(','), searchText, players[0], players[1], page);\n        await stopLoader();\n        window.addEventListener('scroll', this.handleScroll.bind(this))\n    }\n\n    componentWillUnmount() {\n        this.setState({showScrollButton: 'hideScrollButton'});\n        window.removeEventListener('scroll', this.handleScroll.bind(this));\n    }\n\n    \n    handleDetailsClick(id) {\n        const { history } = this.props;\n        history.push(`details/${id}`);\n    }\n\n    handleScrollTopClick () {\n            return window.scrollTo({\n                top: 0,\n                behavior: 'smooth',\n                block: 'center'\n            })\n    }\n\n    handleScroll() {\n        const scroll = window.scrollY;\n        if(scroll>540) {\n            this.setState({showScrollButton: 'showScrollButton'})\n        } else if(scroll <= 539) {\n            this.setState({showScrollButton: 'hideScrollButton'})\n        }\n    }\n\n    topOfPage() {\n        return window.scrollTo({\n            top: 0\n        })\n    }\n\n    async handleCartClick(id) {\n        const { addToCart } = this.props;\n        await addToCart(id);\n    }\n\n    handleChangePage = async (value, event) => {\n        event.preventDefault()\n        const { categories: { page }, setPage } = this.props;\n        const newState = page+value;\n        if(newState < 0) {\n          setPage(0);\n        } else {\n          setPage(page+value);\n        }\n        const { getGamesByFilter, setLoader, stopLoader, searchText } = this.props;\n        this.topOfPage()\n        await setLoader()\n        let chosenCats = JSON.parse(localStorage.getItem('checked-cats')) || '';\n        if(chosenCats) {\n            chosenCats = chosenCats.join(',');\n        }\n        const search = searchText || undefined;\n        await getGamesByFilter(chosenCats, search, undefined, undefined, newState);\n        await stopLoader();\n      }\n\n    render() {\n        const { showScrollButton } = this.state;\n        const { games, error } = this.props.games;\n        const { loading, categories: { page } } = this.props;\n        if(!games) {\n            return(\n                <div>\n                 No games found\n                 </div>\n            );\n        }\n        if (error) {\n            return (\n                <Fragment>\n                    <h3>Something went wrong!</h3>\n                </Fragment>\n            )\n        }\n\n        if(loading) {\n            const Skeletons = Array.from(new Array(30)).map((element, index) => {\n                return(\n                    <Grid item xs={12} sm={6} md={3} lg={3} className=\"overviewGrid\" key={index}>\n                        <Card className='skeleton-card'>\n                            <Skeleton className='skeleton-image' variant=\"rect\" />   \n                            <Skeleton className='skeleton-text' width='83%' />\n                            <Skeleton className='skeleton-text' width='38%' />\n                            <Skeleton className='skeleton-button' variant='rect' />\n                        </Card>\n                    </Grid>\n                )    \n        }) \n        return(\n            <Grid container spacing={3} className=\"overviewGridContainer\">\n                {Skeletons}\n            </Grid>\n        )\n        }\n       \n        const gameNames = games.map((game, index) => {\n            return (\n                <Grid item xs={12} sm={6} md={3} lg={3} className=\"overviewGrid\" key={index}>\n                        <Card\n                            className='game-card'\n                        >\n                            <CardActionArea \n                                className=\"gameOverview\"\n                                onClick={ () => this.handleDetailsClick(game.id)}\n                             >\n                                <CardMedia\n                                    image={game.images.small}\n                                    title={game.name}\n                                />\n                                <img src={game.images.small} alt={game.name} />\n                                <Typography gutterBottom variant=\"h6\" component=\"h2\">{game.name}</Typography>\n                                <Typography variant=\"body2\" component=\"p\" className=\"price\">\n                                    {game.discount > 0.3 ? (\n                                        <Fragment>\n                                        <span className=\"originalPrice\">{currencyFormatter.format((game.price*9.18).toFixed(0), {precision: 0, thousand: '.', code: 'NOK'}) }</span> \n                                        <span className=\"salePrice\">{currencyFormatter.format(((game.price*(1-game.discount))*9.18).toFixed(0), {precision: 0, thousand: '.', code: 'NOK'})}</span>\n                                        <Badge className=\"sale\" badgeContent={(game.discount*100).toFixed(0) + '%'} color=\"secondary\" />\n                                        </Fragment>\n                                    ) : (\n                                        <span>{currencyFormatter.format((game.price*9.18).toFixed(0), {precision: 0, thousand: '.', code: 'NOK'}) }</span>\n                                        )\n                                    }\n                                    </Typography>\n                            </CardActionArea>\n                            <Button \n                                variant=\"contained\" \n                                color='primary' \n                                className='add-to-cart-btn'\n                                onClick={() => this.handleCartClick(game.id)}\n                            >\n                                \n                                    <ShoppingCartIcon />\n                                Add to cart\n                            </Button>\n                        </Card>\n                </Grid>\n            );\n        });\n        \n        return(\n            <div>\n                <Fragment>\n                    {/* <div>\n                        <select onChange={this.handleFilterChange.bind(this)}>\n                            <option value=\"\">Filtrer med:</option>\n                            <option value=\"name\">Navn</option>\n                        </select>\n                    </div> */}\n                    <Grid container spacing={3} className=\"overviewGridContainer\">\n                        {gameNames}\n                    </Grid>\n                    \n                    <Fab \n                        color=\"secondary\" \n                        className={showScrollButton} \n                        onClick={this.handleScrollTopClick.bind(this)} \n                        size=\"small\" \n                        aria-label=\"scroll back to top\"\n                    >\n                        <KeyboardArrowUpIcon />\n                    </Fab>\n                </Fragment>\n                <div className=\"pagenation\">\n                    {\n                    page !== 0 && (\n                    <button onClick={this.handleChangePage.bind(this, (-1))}>\n                        <ArrowBackIos />\n                    </button>\n                    )\n                    }\n                    <Typography variant=\"body2\">Page {page +1}</Typography>\n                    {\n                    games.length === 32 && (\n                    <button onClick={this.handleChangePage.bind(this, 1)}>\n                        <ArrowForwardIos  />\n                    </button>\n                    )\n                    }\n                </div>\n            </div>\n\n        )\n    }\n}\n\nOverview.propTypes = {\n    games: PropTypes.object.isRequired,\n    categories: PropTypes.object.isRequired,\n    searchText: PropTypes.string.isRequired,\n    getGamesByFilter: PropTypes.func.isRequired,\n    setLoader: PropTypes.func.isRequired,\n    stopLoader: PropTypes.func.isRequired,\n    addToCart: PropTypes.func.isRequired,\n    setPage: PropTypes.func.isRequired,\n    \n    \n}\n\nfunction mapStateToProps(state) {\n    return {\n        games: state.games,\n        loading: state.loading.isLoading,\n        searchText: state.search.searchText,\n        categories: state.categories,\n    }\n}\n\nconst mapDispatchToProps = {\n    setLoader, \n    stopLoader,\n    addToCart,\n    getGamesByFilter,\n    setPage\n} \n\nexport default connect(mapStateToProps, mapDispatchToProps)(Overview);","import React, { Component, Fragment } from 'react'\nimport { Link } from 'react-router-dom';\nimport Card from '@material-ui/core/Card';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport Typography from '@material-ui/core/Typography';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport {Badge} from '@material-ui/core'\nimport { getGameDetails, getGamesByFilter } from '../actions/games';\nimport { setLoader, stopLoader } from '../actions/loading';\nimport { addToCart } from '../actions/shopcart';\nimport { getAllCategories } from '../actions/categories';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Button } from '@material-ui/core';\nvar currencyFormatter = require('currency-formatter');\n\nclass Details extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      relatedGames: [],\n      error: null\n    }\n  }\n\n  async componentDidMount() {\n    try{\n      const { getAllCategories, getGamesByFilter, getGameDetails, setLoader, stopLoader } = this.props;\n      await setLoader()\n      await getAllCategories();\n      const chosenGame = await getGameDetails(this.props.match.params.id);\n      const chosenGameCategories = await chosenGame.categories.map(id => id.id)\n      const catStr = await chosenGameCategories[0]\n      const relatedGames = await getGamesByFilter(catStr)\n      this.setState({relatedGames})\n      await stopLoader();\n    } catch (error) {\n      this.setState({error})\n    }\n  }\n\n  async componentDidUpdate (prevProp, prevState) {\n    const { getGameDetails, stopLoader } = this.props\n    \n    if(this.props.match.params.id !== prevProp.match.params.id) {\n      await getGameDetails(this.props.match.params.id);\n      stopLoader()\n    } \n  }\n\n  async handleCartClick(id) {\n    const { addToCart } = this.props;\n    await addToCart(id);\n  }\n\n  async handleDetailsClick(event, id) {\n    const { history, getGameDetails, setLoader } = this.props;\n    setLoader()\n    const chosenGame = await getGameDetails(id);\n    this.setState({chosenGame})\n    history.push(`/details/${id}`);\n  }\n\n  render() {\n    if(!this.props.games.chosenGame.name) {\n      return (\n        <Fragment>\n            <h3>Something went wrong!</h3>\n        </Fragment>\n      )\n    }\n    \n    const {\n      relatedGames,\n      error\n    } = this.state;\n\n    const {\n      chosenGame: {\n        id,\n        name, \n        min_players, \n        max_players,\n        min_playtime,\n        max_playtime,\n        min_age,\n        categories, \n        description_preview,\n        images: {medium},\n        price,\n        discount,\n        primary_publisher,\n        average_user_rating,\n        rules_url\n      } \n    } = this.props.games\n    \n    const { loading } = this.props;\n    const allCategories = this.props.categories.categories;\n    \n    \n    if(error) {\n      return (\n        <Fragment>\n            <h3>{error.message}</h3>\n        </Fragment>\n      )\n    }\n\n    if(loading) {\n      return(\n        <div className=\"details-container\">\n          <Skeleton className=\"title\" height=\"70px\" width=\"300px\" />\n          <Skeleton className=\"img\" height='90%' width=\"300px\" margin=\"0\" />\n          <Skeleton className=\"VIPDetails\" />\n          <Skeleton className=\"add-to-cart-btn\" height=\"40px\" />\n          <Skeleton className=\"description\" height=\"400px\" />\n          <Skeleton className=\"price\" width=\"80px\" />\n          <Skeleton className=\"extra-details\" />\n        </div>\n      )\n    }\n\n    const categoryNames = categories.map(category => {\n      return allCategories.find(categoryObj => categoryObj.id === category.id);\n    }).filter(cat => cat)\n\n  \n    const otherGames = relatedGames.filter(game => game.id !== id).map(game => {\n      return (\n        <Card\n          className='game-card'\n          key={game.id}\n        >\n          <CardActionArea \n              className=\"gameOverview\"\n              onClick={event => this.handleDetailsClick(event, game.id)}\n          >\n            <img src={game.images.small} alt={game.name}/>\n            <Typography gutterBottom variant=\"h6\" component=\"h2\">{game.name}</Typography>\n            <Typography variant=\"body2\" component=\"p\" className=\"price\">{currencyFormatter.format((game.price*9.18).toFixed(0), {precision: 0, thousand: '.', code: 'NOK'})}</Typography>\n          </CardActionArea>\n          <Button \n              variant=\"contained\" \n              color='primary' \n              className='add-to-cart-btn'\n              onClick={() => this.handleCartClick(game.id)}\n          > \n          <ShoppingCartIcon />\n            Add to cart\n          </Button>\n        </Card>\n      )\n    }).slice(0, 10)\n\n    return (\n      <Fragment>\n          \n          <Link to=\"/\" id=\"home\"><Typography variant=\"overline\">Home</Typography></Link>\n          <Link to=\"/overview\" id=\"overview\"><Typography variant=\"overline\">Game Overview</Typography></Link>\n        \n      <div className='details-container'>\n        <Typography variant=\"h3\" className=\"title\">{name}</Typography>\n        <img src={medium} className=\"img\" alt={name}/>\n        <ul className=\"VIPDetails\">\n          <li><Typography variant=\"body1\" className=\"bold\">Players:</Typography> { min_players ? min_players + '-' + max_players : 'Unknown'}</li>\n          <li><Typography variant=\"body1\" className=\"bold\"> Categories:</Typography> \n            {' ' + categoryNames.map(category => category.name).join(', ')}\n          </li>\n          <li><Typography variant=\"body1\" className=\"bold\">Playtime:</Typography> { min_playtime ? min_playtime + '-' + max_playtime : 'Unknown'} min.</li>\n          <li><Typography variant=\"body1\" className=\"bold\">Minimum age:</Typography> { min_age ? min_age : 'Unknown' }</li>\n        </ul>\n        <Button \n          variant=\"contained\" \n          color='primary' \n          className='add-to-cart-btn'\n          onClick={() => this.handleCartClick(id)}\n        >\n          \n          <ShoppingCartIcon />\n          Add to cart\n        </Button>\n        <Typography variant=\"body1\" className=\"description\">{description_preview}</Typography>\n        <Typography variant=\"h6\" className=\"price\">{discount > 0.3 ? (\n            <Fragment>\n              <span className=\"originalPrice\">{currencyFormatter.format((price*9.18).toFixed(0), {precision: 0, thousand: '.', code: 'NOK'}) }</span> \n              <span className=\"salePrice-details\">{currencyFormatter.format(((price*(1-discount))*9.18).toFixed(0), {precision: 0, thousand: '.', code: 'NOK'})}</span>\n              <Badge className=\"sale\" badgeContent={(discount*100).toFixed(0) + '%'} color=\"secondary\" />\n            </Fragment>\n        ) : (\n            <span>{currencyFormatter.format((price*9.18).toFixed(0), {precision: 0, thousand: '.', code: 'NOK'}) }</span>\n            )\n        }\n        </Typography>\n        <ul className=\"extra-details\">\n          <li><Typography variant=\"body1\" className=\"bold\">Publisher:</Typography> {primary_publisher}</li>\n          <li><Typography variant=\"body1\" className=\"bold\">Rating:</Typography> {average_user_rating ? (average_user_rating).toFixed(1) : 0}</li>\n          <li><Typography variant=\"body1\"><a href={rules_url} target=\"blank\">{rules_url ? 'Rules' : 'No rules found'}</a></Typography></li>\n        </ul>\n        \n      </div>\n      <Typography variant=\"h4\" component=\"h4\" id=\"related-title\">Related games:</Typography>\n      <div className=\"relatedGames\">\n        {otherGames}\n      </div>\n    </Fragment>\n    );\n  }\n}\n\nDetails.propTypes = {\n  games: PropTypes.object.isRequired,\n  getGameDetails: PropTypes.func.isRequired,\n  addToCart: PropTypes.func.isRequired,\n  getGamesByFilter: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = state => ({\n  games: state.games,\n  categories: state.categories,\n  loading: state.loading.isLoading\n})\n\nconst mapDispatchToProps = {\n  getGameDetails,\n  getAllCategories,\n  addToCart,\n  getGamesByFilter,\n  setLoader,\n  stopLoader\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Details);\n","import React, { Fragment } from 'react';\nimport { getGamesByFilter } from '../../actions/games';\nimport { setPlayerRange, setPage } from '../../actions/categories';\nimport Slider from '@material-ui/core/Slider';\nimport { connect } from 'react-redux'\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport PeopleIcon from '@material-ui/icons/People';\nimport { Typography } from '@material-ui/core';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { withRouter } from 'react-router-dom';\n\nconst muiTheme = createMuiTheme({\n  overrides:{\n    MuiSlider: {\n      thumb:{\n      color: \"rgb(142, 61, 81)\",\n      },\n      track: {\n        color: 'rgb(80, 19, 0)'\n      },\n    }\n  }\n});\n\nconst useStyles = makeStyles({\n  root: {\n    width: 250,\n    padding: '1rem',\n    marginTop: '2rem',\n    marginLeft: '1.4rem',\n    color: 'red'\n  },\n});\n\nconst Players = ({\n  setPlayerRange,\n  getGamesByFilter,\n  history,\n  searchText,\n  categories: {\n    players\n  },\n  setPage\n}) => {\n  const classes = useStyles();\n  const chosenCats = JSON.parse(localStorage.getItem('checked-cats')) || [];\n  const [value, setValue] = React.useState([players[0], players[1]]);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleSubmit = () => {\n    setPlayerRange(value);\n    setPage(0);\n    getGamesByFilter(chosenCats.join(','), searchText, value[0], value[1], 0);\n    if(history.location.pathname !== '/overview') {\n      history.push('/overview');\n    }\n  }\n  \n  return(\n    <Fragment> \n      <Typography className='players-heading' variant='body1'>\n        <PeopleIcon />   Choose player range:\n      </Typography>\n      <div className={classes.root}>\n        <ThemeProvider theme={muiTheme}>\n          <Slider\n            min={1}\n            max={20}\n            step={1}\n            value={value}\n            onChange={handleChange}\n            onMouseUp={handleSubmit}\n            valueLabelDisplay=\"on\"\n            aria-labelledby=\"discrete-slider-always\"\n          />\n        </ThemeProvider>\n      </div>\n    </Fragment>\n  );\n}\n\nPlayers.propTypes = {\n  categories: PropTypes.object.isRequired,\n  searchText: PropTypes.string.isRequired,\n  getGamesByFilter: PropTypes.func.isRequired,\n  setPlayerRange: PropTypes.func.isRequired,\n  setPage: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = state => {\n  return {\n    categories: state.categories,\n    searchText: state.search.searchText,\n  }\n}\n\nconst mapDispatchToProps = {\n  setPlayerRange,\n  getGamesByFilter,\n  setPage\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Players));\n","import React, { Fragment } from 'react';\nimport { getAllCategories, toggleCategoryCheck, setPage } from '../../actions/categories'\nimport { getGamesByFilter } from '../../actions/games';\nimport { setLoader, stopLoader } from '../../actions/loading';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { Typography}  from '@material-ui/core';\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\n\nclass Category extends React.Component {\n  componentDidMount = async () => {\n    const { \n      getAllCategories, \n      setLoader, \n      stopLoader, \n      toggleCategoryCheck \n    } = this.props;\n\n    setLoader();\n    const Cats = await getAllCategories();\n    const checkedCats = JSON.parse(localStorage.getItem('checked-cats')) || [];\n    if (checkedCats.length) {\n      checkedCats.forEach(catId => toggleCategoryCheck(catId));\n    }\n    stopLoader();\n    localStorage.setItem('categories', JSON.stringify(Cats))\n  }\n\n  handleScrollTopClick () {\n    return window.scrollTo({\n        top: 0,\n        behavior: 'smooth',\n        block: 'center'\n    });\n  }\n\n\n  handleClick = async id =>{\n    const { toggleCategoryCheck, getGamesByFilter, setPage, history, categories: { players }, searchText } = this.props;\n    const checkedId = await toggleCategoryCheck(id);\n\n    const chosenCats = JSON.parse(localStorage.getItem('checked-cats')) || [];\n    const index = chosenCats.indexOf(id);\n    if(index !== -1) {\n      chosenCats.splice(index, 1);\n    } else {\n      chosenCats.push(checkedId);\n    }\n    await setPage(0);\n    await getGamesByFilter(chosenCats.join(','), searchText, players[0], players[1], 0);\n    localStorage.setItem('checked-cats', JSON.stringify(chosenCats))\n    if(history.location.pathname !== '/overview') {\n      history.push('/overview');\n    }\n  }\n  \n  render() {\n    const categories = this.props.categories.categories || JSON.parse(localStorage.getItem('categories')) || [];\n    \n  \n    const allCategories = categories.map((category, index) => (\n      <ListItem \n        key={index} \n        role={undefined} \n        dense \n        button \n        onClick={this.handleClick.bind(this, category.id)}\n      >\n        <ListItemIcon>\n          <Checkbox \n            className=\"checkbox\"\n            checked={category.checked} \n            value={category.id} \n          />\n        </ListItemIcon>\n        <ListItemText primary={category.name} />\n      </ListItem>\n    ));\n\n    return (\n      <Fragment>\n        <Typography className='players-heading' variant='body1'>\n          Choose categories:\n        </Typography>\n        <List className=\"table-container\">\n          {allCategories}\n        </List>\n      </Fragment>\n    )\n  }\n}\n\nCategory.propTypes = {\n  categories: PropTypes.object.isRequired,\n  searchText: PropTypes.string.isRequired,\n  getAllCategories: PropTypes.func.isRequired,\n  getGamesByFilter: PropTypes.func.isRequired,\n  setLoader: PropTypes.func.isRequired,\n  stopLoader: PropTypes.func.isRequired,\n  toggleCategoryCheck: PropTypes.func.isRequired,\n  setPage: PropTypes.func.isRequired,\n}\n\nfunction mapStateToProps(state) {\n  return {\n      categories: state.categories,\n      games: state.games,\n      loading: state.loading.isLoading,\n      searchText: state.search.searchText\n  }\n}\n\nconst mapDispatchToProps = {getAllCategories, toggleCategoryCheck, getGamesByFilter, setPage, setLoader, stopLoader}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Category));\n","import React, { Fragment } from 'react'\nimport Players from './FilterComponent/PlayersSort'\nimport Category from './FilterComponent/CategoriesSort'\nimport Divider from '@material-ui/core/Divider';\nimport Typography from '@material-ui/core/Typography'\n\nclass Sortlist extends React.Component {\n    render() {\n        return(\n            <Fragment>\n                    <Typography align=\"center\" gutterBottom color=\"textPrimary\" variant='overline' component=\"h3\">Filter:</Typography>\n                <Divider />\n                    <Players />\n                <Divider />\n                    <Category />\n        \n        </Fragment>\n        )\n    }\n}\n\nexport default Sortlist;","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Typography } from '@material-ui/core';\nimport { HighlightOff} from '@material-ui/icons';\nimport { removeFromCart } from '../actions/shopcart';\nvar currencyFormatter = require('currency-formatter');\n\n\nconst CartItems = ({\n  shopcart: {\n    cartItems = []\n  },\n  removeFromCart\n}) => {\n  if(!cartItems.length) {\n    return (\n      <Fragment>\n        <Typography variant='body1' style={{textAlign: \"center\", marginTop: \"1rem\"}}>No items in cart!</Typography>\n      </Fragment>\n    );\n  }\n\n  const handleRemoveClick = id => {\n    removeFromCart(id);\n  }\n\n  const itemMarkup = cartItems.map((item, index) => (\n    <div className='shopcart-item' key={index}>\n      <img src={item.images.thumb} alt={item.name} />\n      <Typography className=\"shopcart-name\" variant='h5'>{item.name}</Typography>\n      <Typography className=\"shopcart-price\" variant='body1'>{item.discount > 0.3 ? (\n                                        <Fragment> \n                                        <p className=\"salePrice-details\">{currencyFormatter.format(((item.price*(1-item.discount))*9.18).toFixed(0), {precision: 0, thousand: '.', code: 'NOK'})} <span className=\"percentageSale\">{item.discount*100}%</span></p>\n                                        \n                                        </Fragment>\n                                    ) : (\n                                        <span>{currencyFormatter.format((item.price*9.18).toFixed(0), {precision: 0, thousand: '.', code: 'NOK'}) }</span>\n                                        )\n                                    }</Typography>\n      <HighlightOff \n        className='remove-from-cart-btn' \n        onClick={() => handleRemoveClick(item.id)}\n      />\n    </div>\n    \n  ));\n\n  return (\n    <Fragment>\n      {itemMarkup}\n    </Fragment>\n  )\n}\n\nCartItems.propTypes = {\n  shopcart: PropTypes.object.isRequired,\n  removeFromCart: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = state => ({\n  shopcart: state.shopcart\n});\n\nconst mapDispatchToProps = {\n  removeFromCart,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CartItems);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Typography } from '@material-ui/core';\nvar currencyFormatter = require('currency-formatter');\n\nconst CartSum = ({\n  shopcart: {\n    cartItems\n  }\n}) => {\n  return (\n    <Fragment>\n      {cartItems.length ? (\n        <div className='sum-container'>\n          <Typography variant='h5'>Sum:</Typography>\n          <Typography className=\"shopcart-price\" variant='body1'>{currencyFormatter.format((cartItems.reduce((acc, item) => {\n            return acc + (item.discount > 0.3 ? +item.price*(1-item.discount) : +item.price);\n          }, 0) * 9.18).toFixed(0), {precision: 0, thousand: '.', code: 'NOK'})}</Typography>\n        </div>\n      ): (\n        <Fragment></Fragment>\n      )}\n    </Fragment>\n  )\n}\n\nCartSum.propTypes = {\n  shopcart: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps  = state => ({\n  shopcart: state.shopcart\n})\n\nexport default connect(mapStateToProps, null)(CartSum);\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { updateCart, removeFromCart, toggleShopcart } from '../actions/shopcart';\nimport { setLoader, stopLoader } from '../actions/loading';\nimport PropTypes from 'prop-types';\nimport { HighlightOff} from '@material-ui/icons';\nimport { Typography } from '@material-ui/core';\nimport CartItems from './CartItems';\nimport CartSum from './CartSum';\n\n\nclass Shopcart extends Component {\n  static propTypes = {\n    updateCart: PropTypes.func.isRequired,\n    removeFromCart: PropTypes.func.isRequired,\n    shopcart: PropTypes.object.isRequired,\n    loading: PropTypes.bool.isRequired,\n    toggleShopcart: PropTypes.func.isRequired,\n  }\n\n  handleCrossClick = () => {\n    const { toggleShopcart } = this.props;\n    toggleShopcart();\n  }\n\n  render() {\n    const { loading, shopcart: { error } } = this.props;\n\n    if (error) {\n      return (\n        <Fragment>\n          <h3>Error</h3>\n          <p>Something went wrong</p>\n        </Fragment>\n      );\n    }\n\n    return (\n      <Fragment>\n        {\n          !loading ? (\n            <Fragment>\n              <HighlightOff \n                  color='primary'\n                  className='shopcart-close-btn'\n                  onClick={this.handleCrossClick.bind(this)}\n              />\n              <div className='shopcart-content'>\n                <Typography variant='h3' component=\"h3\">Shopping cart:</Typography>\n                <CartItems />\n                <CartSum />\n              </div>\n            </Fragment>\n          ) : (\n             <p>Loading...</p>\n          )\n        }\n      </Fragment>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  shopcart: state.shopcart,\n  loading: state.loading.isLoading\n});\n\nconst mapDispatchToProps = {\n  updateCart,\n  removeFromCart,\n  setLoader,\n  stopLoader,\n  toggleShopcart\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Shopcart);\n","import React, { Component } from 'react';\nimport Sortlist from './Sortlist';\nimport Shopcart from './Shopcart';\nimport { withRouter, Link } from 'react-router-dom';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { ShoppingCart, Search }from '@material-ui/icons';\nimport Drawer from '@material-ui/core/Drawer';\nimport Badge from '@material-ui/core/Badge';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { setLoader, stopLoader } from '../actions/loading';\nimport { updateCart, toggleShopcart } from '../actions/shopcart';\nimport { toggleSearchField, updateSearchWord } from '../actions/search';\nimport { getGamesByFilter } from '../actions/games';\nimport { setPage } from '../actions/categories'; \n\n\n\nclass Navbar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      left: false,\n    }\n  }\n\n  static propTypes = {\n    toggleShopcart: PropTypes.func.isRequired,\n    toggleSearchField: PropTypes.func.isRequired,\n    updateSearchWord: PropTypes.func.isRequired,\n    getGamesByFilter: PropTypes.func.isRequired,\n    shopcart: PropTypes.object.isRequired,\n    search: PropTypes.object.isRequired,\n    setLoader: PropTypes.func.isRequired,\n    stopLoader: PropTypes.func.isRequired,\n    updateCart: PropTypes.func.isRequired,\n    setPage: PropTypes.func.isRequired,\n  }\n\n  async componentDidMount() {\n    const { updateCart } = this.props;\n    if(this.props.shopcart.cartItems.length === 0) {\n      const savedItems = await JSON.parse(localStorage.getItem('cart-items')) || [];\n      savedItems.forEach(item => updateCart(item.id));\n    }\n    document.addEventListener('keydown', this.handleEnterPress.bind(this));\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.handleEnterPress.bind(this));\n  }\n \n\n  toggleFilter = (open) =>  {\n    this.setState({left: open})\n  }\n\n  handleShopcartClick = () => {\n    const { toggleShopcart } = this.props;\n    toggleShopcart(); \n  }\n\n  handleSeachIconClick = () => {\n    const { toggleSearchField } = this.props;\n    toggleSearchField();\n  }\n\n  handleSearchFieldChange = event => {\n    const searchWord = event.target.value;\n    const { updateSearchWord } = this.props;\n    updateSearchWord(searchWord);\n  }\n\n  async handleEnterPress(event) {\n    if (event.keyCode === 13) {\n      const {\n        history,\n        setPage,\n        getGamesByFilter,\n        search: {\n          searchText,\n        },\n        setLoader,\n        stopLoader\n       } = this.props;\n       if(history.location.pathname !== '/overview') {\n         history.push('/overview');\n       }\n       setLoader();\n       localStorage.removeItem('checked-cats');\n       setPage(0);\n       await getGamesByFilter('', searchText, undefined, undefined, 0);\n       stopLoader();\n    }\n  }\n\n  render() {\n    const { left } = this.state; \n    const {\n      shopcart: { \n        showCart, \n        cartItems\n      }, \n      search: { \n        showSearchField, \n        searchText \n      } \n    } = this.props;\n\n    const sidelist = side => {\n      return (\n      <div\n        className=\"sortList\"\n        role=\"presentation\"\n        onClick={this.toggleFilter.bind(this, true)}\n        onKeyDown={this.toggleFilter.bind(this, true)}\n      >\n        <Sortlist />\n      </div>\n      );\n    }\n    return (\n      <div className='navbar-container'>\n        <AppBar className='navbar-main'>\n          <Toolbar>\n            <MenuIcon className='filter-menu' onClick={this.toggleFilter.bind(this, true)}/>\n            <Drawer anchor=\"left\" open={left}  onClose={this.toggleFilter.bind(this, false)}>\n              {sidelist('left')}\n            </Drawer>  \n            <Typography variant=\"h4\" className='navbar-title'>\n              <Link to=\"/\">Game Store</Link>\n              <img className='header-logo' src='./Logo2.png' alt='logo game store' />\n            </Typography>\n            {showSearchField && (\n              <input\n                autoFocus \n                type=\"text\" \n                placeholder='Search!' \n                className='search-field' \n                value={searchText}\n                onChange={this.handleSearchFieldChange.bind(this)}\n              />\n            )}\n            <Button onClick={this.handleSeachIconClick.bind(this)}>\n              <Search className='search-icon'/>  \n            </Button>\n            <Button color=\"inherit\"\n              onClick={this.handleShopcartClick.bind(this)}\n            >\n              <Badge badgeContent={cartItems.length} color=\"secondary\">\n                <ShoppingCart className='shopcart-icon'/>\n              </Badge>\n              Shopcart\n            </Button>\n            <Drawer anchor=\"right\" open={showCart} onClose={this.handleShopcartClick.bind(this)} className='shopcart-container'>\n              <Typography variant=\"h2\" className='navbar-title'>\n                <Shopcart />  \n              </Typography>\n          </Drawer>\n          </Toolbar>\n        </AppBar>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  shopcart: state.shopcart,\n  search: state.search,\n});\n\nconst mapDispatchToProps = {\n  toggleShopcart,\n  toggleSearchField,\n  updateSearchWord,\n  getGamesByFilter,\n  setLoader,\n  stopLoader,\n  updateCart,\n  setPage\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Navbar));","import {\n  TOGGLE_SEARCH_FIELD,\n  UPDATE_SEARCH_WORD\n} from './constants';\n\nexport const toggleSearchField = () => dispatch => {\n  dispatch({\n    type: TOGGLE_SEARCH_FIELD\n  })\n}\n\nexport const updateSearchWord = text => dispatch => {\n  dispatch({\n    type: UPDATE_SEARCH_WORD,\n    payload: text\n  });\n}","import React, { Fragment, Component } from 'react';\nimport Card from '@material-ui/core/Card';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Badge from '@material-ui/core/Badge';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport { addToCart } from '../actions/shopcart';\nimport { getGamesByFilter, getGameDetails } from '../actions/games';\nimport { setLoader, stopLoader } from '../actions/loading'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { ArrowBackIos, ArrowForwardIos } from '@material-ui/icons';\nvar currencyFormatter = require('currency-formatter');\n\n\nclass LandingPage extends Component {\n  static propTypes = {\n    getGameDetails: PropTypes.func.isRequired, \n    getGamesByFilter: PropTypes.func.isRequired,\n    setLoader: PropTypes.func.isRequired,\n    stopLoader: PropTypes.func.isRequired,\n    games: PropTypes.object.isRequired,\n    loading: PropTypes.bool.isRequired,\n  }\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      gameImage: '',\n      startSlide: 0,\n      endSlide: 4\n    }\n  }\n\n  async componentDidMount() {\n    const { getGameDetails, getGamesByFilter, setLoader, stopLoader } = this.props;\n    setLoader()\n    const response = await getGameDetails('mce5HZPnF5');\n    await getGamesByFilter();\n    const gameImage = response.images.medium;\n    this.setState({\n      gameImage\n    });\n    stopLoader();\n  }\n\n  handleOverviewClick () {\n    const { history } = this.props;\n    \n    history.push('/overview')\n  }\n\n  async handleCartClick(id) {\n    const { addToCart } = this.props;\n    await addToCart(id);\n}\n\n  handleDetailsClick(id) {\n    const { history } = this.props;\n    history.push(`details/${id}`);\n}\n\n  handleForwardClick () {\n    const { startSlide, endSlide } = this.state;\n    if(endSlide > 30) {\n      this.setState({\n        startSlide: 0,\n        endSlide: 4\n      })\n    } else {\n      this.setState({\n        startSlide: startSlide + 4,\n        endSlide: endSlide+4\n      })\n    }\n    \n  }\n\n  handleBackwardClick () {\n    const { startSlide, endSlide } = this.state;\n    if(startSlide === 0) {\n      this.setState({\n        startSlide: 0,\n        endSlide: 4\n      })\n    } else {\n      this.setState({\n        startSlide: startSlide - 4,\n        endSlide: endSlide - 4\n      })\n    }\n    \n  }\n\n  render() {\n    const { startSlide, endSlide } = this.state;\n    const { games } = this.props.games;\n    const { loading } = this.props;\n\n    if(loading) {\n      const sliderSkeleton = Array.from(new Array(4)).map((el, index) => {\n        return (\n          <Card className=\"game-card\" key={index} >\n            <Skeleton className='skeleton-image' variant=\"rect\" />   \n            <Skeleton className='skeleton-text' width='83%' />\n            <Skeleton className='skeleton-text' width='38%' />\n            <Skeleton className='skeleton-button' variant='rect' />\n          </Card>\n        )\n      }).slice(startSlide, endSlide)\n      return(\n        <div className=\"landing-container\">\n          <Skeleton className=\"skeletonImg\" variant=\"rect\" />\n          <div className=\"skeletonText\">\n            <Skeleton className=\"skeletonTitle\" />\n            <Skeleton className=\"skeletonDesc\" />\n            <Skeleton className=\"skeletonBtn\" variant=\"rect\" />\n          </div>\n          \n          <div className=\"skeleton-slider\">\n            {sliderSkeleton}\n          </div>\n        </div>\n      )\n    }\n    const popGames = games.map((game, index) => {\n      return (\n        <Card key={index}\n            className='game-card'>\n            <CardActionArea \n                className=\"game-landing\"\n                onClick={ () => this.handleDetailsClick(game.id)}\n              >\n                <CardMedia\n                    image={game.images.small}\n                    title={game.name}\n                />\n                <img src={game.images.small} alt={game.name} />\n                <Typography gutterBottom variant=\"h6\" component=\"h2\">{game.name}</Typography>\n                <Typography variant=\"body2\" component=\"p\" className=\"price\">\n                    {game.discount > 0.3 ? (\n                        <Fragment>\n                        <span className=\"originalPrice\">{currencyFormatter.format((game.price*9.18).toFixed(0), {precision: 0, thousand: '.', code: 'NOK'}) }</span> \n                        <span className=\"salePrice\">{currencyFormatter.format(((game.price*(1-game.discount))*9.18).toFixed(0), {precision: 0, thousand: '.', code: 'NOK'})}</span>\n                        <Badge className=\"sale\" badgeContent={(game.discount*100).toFixed(0) + '%'} color=\"secondary\" />\n                        </Fragment>\n                    ) : (\n                        <span>{currencyFormatter.format((game.price*9.18).toFixed(0), {precision: 0, thousand: '.', code: 'NOK'}) }</span>\n                        )\n                    }\n                    </Typography>\n            </CardActionArea>\n            <Button \n                variant=\"contained\" \n                color='primary' \n                className='add-to-cart-btn'\n                onClick={() => this.handleCartClick(game.id)}\n            >\n                \n                    <ShoppingCartIcon />\n                Add to cart\n            </Button>\n        </Card>\n      )\n    } ).slice(startSlide, endSlide)\n    return (\n      <div className='landing-container'>\n        <img src={this.state.gameImage} alt='board game legacy' className='landing-image' />\n        <div className=\"landing-text\">\n          <Typography variant=\"h2\">WELCOME TO GAME STORE</Typography>\n          <Typography variant=\"h5\" className='landing-text'>\n            Boardgames is one of the largest portals for browsing and buying board games in the world. Start browsing from more than 10.000 games and find your new favorite game!\n          </Typography>\n          <Button className=\"btn landing-btn\" onClick={this.handleOverviewClick.bind(this)}>See all games</Button>\n        </div>\n        \n        <div className=\"landing-popGames\">\n        <Typography variant=\"h4\">Most popular games:</Typography>\n        <div className=\"slider\">\n          <Button onClick={this.handleBackwardClick.bind(this)}><ArrowBackIos className=\"arrow\" /></Button>\n          {popGames}\n          <Button onClick={this.handleForwardClick.bind(this)}><ArrowForwardIos className=\"arrow\" /></Button>\n        </div>\n          <div className=\"slider-pageDetails\">\n            Game {startSlide+1}-{endSlide} of {games.length}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n      games: state.games,\n      loading: state.loading.isLoading,\n  }\n}\nconst mapDispatchToProps = {\n  getGameDetails,\n  getGamesByFilter,\n  setLoader,\n  stopLoader,\n  addToCart\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LandingPage);\n","import {\n    GET_ALL_GAMES,\n    GET_ALL_GAMES_ERROR,\n    GET_GAME_DETAILS,\n    GAME_DETAILS_ERROR,\n    GET_GAMES_BY_NAME_ERROR,\n    GET_GAMES_BY_NAME,\n    GET_GAMES_BY_CATEGORIES,\n    GET_GAMES_BY_CATEGORIES_ERROR,\n} from '../actions/constants';\n\nconst initialState = {\n    games: [],\n    chosenGame: {},\n    error: null,\n}\n\nexport default function(state=initialState, action) {\n    const { type, payload } = action;\n    switch(type) {\n        case GET_ALL_GAMES: \n        case GET_GAMES_BY_NAME:\n            return {\n                ...state, \n                games: payload,  \n            }\n        case GET_ALL_GAMES_ERROR:\n        case GAME_DETAILS_ERROR:\n        case GET_GAMES_BY_NAME_ERROR:\n        case GET_GAMES_BY_CATEGORIES_ERROR:\n            return {\n                ...state,\n                error: payload,\n            }\n        case GET_GAME_DETAILS:\n            return {\n                ...state,\n                chosenGame: payload,\n            }\n        case GET_GAMES_BY_CATEGORIES:\n            return {\n                ...state,\n                games: payload,\n            }\n        default:\n            return state;\n    }; \n};","import {\n    GET_CATEGORIES,\n    GET_CATEGORIES_ERROR,\n    CHECK_CATEGORY,\n    SET_PLAYER_RANGE,\n    SET_PAGE\n} from '../actions/constants';\n\nconst initialState = {\n    categories: [],\n    players: [1, 6],\n    page: 0,\n    error: null,\n}\n\nfunction getIndex(array, id) {\n    return array.findIndex(category => category.id === id);\n  }\n\nexport default function(state=initialState, action) {\n    const { type, payload } = action;\n    switch(type) {\n        case GET_CATEGORIES:\n            return {\n                ...state,\n                categories: payload,\n            }\n        case GET_CATEGORIES_ERROR:\n            return {\n                ...state,\n                error: payload,\n            }\n        case CHECK_CATEGORY:\n            let index = getIndex(state.categories, payload);\n            if (index !== -1) {\n                return {\n                    ...state,\n                    categories: [\n                        ...state.categories.slice(0, index),\n                        {\n                            ...state.categories[index],\n                            checked: !state.categories[index].checked\n                        },\n                        ...state.categories.slice(index + 1)\n                    ]\n                }\n            } else {\n                return state;\n            }\n        case SET_PLAYER_RANGE:\n            return {\n                ...state,\n                players: payload\n            }\n        case SET_PAGE:\n            return {\n                ...state,\n                page: payload\n            }\n        default:\n            return state;\n    }\n}","import {\n  START_LOADING,\n  UNLOAD\n} from '../actions/constants';\n\nconst initialState = {\n  isLoading: true\n}\n\nexport default function(state=initialState, action) {\n  const { type } = action;\n  switch(type) {\n    case START_LOADING:\n      return {\n        ...state,\n        isLoading: true\n      };\n    case UNLOAD:\n      return {\n        ...state,\n        isLoading: false\n      };\n    default:\n      return state;\n  }\n}","import {\n  ADD_TO_CART,\n  ADD_TO_CART_ERROR,\n  REMOVE_FROM_CART,\n  TOGGLE_SHOW_CART\n} from '../actions/constants';\n\nconst initialState = {\n  cartItems: [],\n  error: null,\n  showCart: false\n};\n\nfunction getIndex(array, id) {\n  return array.findIndex(game => game.id === id);\n}\n\nexport default function(state=initialState, action) {\n  const { type, payload } = action;\n  switch(type) {\n    case ADD_TO_CART:\n      return {\n        ...state,\n        cartItems: [\n          ...state.cartItems,\n          payload\n        ]\n      }\n      case REMOVE_FROM_CART:\n        let index = getIndex(state.cartItems, payload);\n        return {\n          ...state,\n          cartItems: [\n            ...state.cartItems.slice(0, index),\n            ...state.cartItems.slice(index + 1)\n          ]\n        }\n      case TOGGLE_SHOW_CART:\n        return {\n          ...state,\n          showCart: !state.showCart\n        }\n      case ADD_TO_CART_ERROR:\n        return {\n          ...state,\n          error: payload\n        }\n    default:\n      return state;\n  }\n}","import {\n  TOGGLE_SEARCH_FIELD,\n  UPDATE_SEARCH_WORD\n} from '../actions/constants';\n\nconst intitailState = {\n  showSearchField: false,\n  searchText: ''  \n}\n\nexport default function(state = intitailState, action) {\n  const { type, payload } = action;\n  switch(type) {\n    case TOGGLE_SEARCH_FIELD:\n      return {\n        ...state,\n        showSearchField: !state.showSearchField\n      }\n    case UPDATE_SEARCH_WORD:\n      return {\n        ...state,\n        searchText: payload\n      }\n    default:\n      return state;\n  }\n}","import { combineReducers } from 'redux';\n\nimport games from './games';\nimport categories from './categories'\nimport loading from './loading';\nimport shopcart from './shopcart';\nimport search from './search';\n\n\nexport default combineReducers({\n    games,\n    categories,\n    shopcart,\n    loading,\n    search,\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/index';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n    rootReducer,\n    initialState,\n    composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;","import React from 'react';\nimport './App.scss';\nimport { HashRouter, Route, Switch } from 'react-router-dom'\nimport Overview from './components/Overview';\nimport Details from './components/Details';\nimport Navbar from './components/Navbar';\nimport Shopcart from './components/Shopcart';\nimport Container from '@material-ui/core/Container';\nimport LandingPage from './components/LandingPage';\nimport { Provider } from 'react-redux';\nimport store from './store'\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <HashRouter>\n          <Navbar />\n          <Container className='content-area'>\n            <Switch>\n              <Route path='/' exact component={LandingPage} />\n              <Route path='/overview' component={Overview} />\n              <Route path='/details/:id' component={Details} />\n              <Route path='/shopcart' component={Shopcart} />\n            </Switch>\n          </Container>\n        </HashRouter>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}